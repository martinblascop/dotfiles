plugins:
  helm-default-values:
    shortCut: Shift-L
    confirm: false
    description: Chart Default Values
    scopes:
      - helmreleases
    command: bash
    background: false
    args:
      - -c
      - >-
        temp_dir=$(mktemp -d) && env -C $temp_dir helm fetch $(kubectl --context $CONTEXT get hr/$COL-NAME -n $NAMESPACE -o template='{{.spec.chart.spec.sourceRef.name}}')/$COL-NAME --untar --version '*' && vim $temp_dir/*/values.yaml
  helm-values:
    shortCut: Shift-V
    confirm: false
    description: Chart Values
    scopes:
      - helmreleases
    command: bash
    background: false
    args:
      - -c
      - >-
        revision=$(helm history -n $NAMESPACE --kube-context $CONTEXT $COL-NAME | grep deployed | awk '{ printf  $1 }');
        kubectl get secrets --context $CONTEXT -n $NAMESPACE sh.helm.release.v1.$COL-NAME.v$revision -o yaml
        | yq e '.data.release' -
        | base64 -d
        | base64 -d
        | gunzip
        | jq -r '.chart.values'
        | yq -P
        | vim - +'set filetype=yaml'
  certificate-request:
    shortCut: Shift-L
    confirm: false
    description: View CertificateRequest
    scopes:
      - certificaterequests
    command: bash
    background: false
    args:
      - -c
      - >-
        kubectl get certificaterequest/$COL-NAME --context $CONTEXT -n $NAMESPACE -o template='{{.status.certificate | base64decode}}'
        | openssl x509 -text
        | less -K
  get-aws-ec2-node:
    shortCut: Shift-V
    confirm: false
    description: EC2-TYPE-JSON
    scopes:
      - nodes
    command: bash
    background: false
    args:
      - -c
      - >-
        aws ec2 describe-instance-types --instance-types $(kubectl get nodes/$COL-NAME --context $CONTEXT -o template='{{ index .metadata.labels "node.kubernetes.io/instance-type" }}') --profile $CONTEXT
        | less -K
        | vim - +'set filetype=json'
  view-aws-ec2-node:
    shortCut: Shift-X
    confirm: false
    description: EC2-CPU-MEM
    scopes:
      - nodes
    command: bash
    background: false
    args:
      - -c
      - >-
        eks-node-viewer --context $CONTEXT --resources cpu,memory --node-sort name --disable-pricing --extra-labels eks.amazonaws.com/nodegroup
  list-aws-nodes:
    shortCut: Shift-L
    confirm: false
    description: NODE-ID
    scopes:
      - nodes
    command: bash
    background: false
    args:
      - -c
      - >-
        cat <(kubectl --context $CONTEXT get nodes -o=custom-columns=NAME:.metadata.name,ID:.spec.providerID,NODEGROUP:"metadata.labels.eks\.amazonaws\.com/nodegroup",CAPACITY-TYPE:"metadata.labels.eks\.amazonaws\.com/capacityType",TAINTS:.spec.taints) <(kubectl --context $CONTEXT get nodes -o=custom-columns=NAME:.metadata.name,CPU:.status.capacity.cpu,MEMORY:.status.capacity.memory)
        | less -K
  refresh-external-secrets:
    shortCut: Shift-R
    confirm: false
    scopes:
      - externalsecrets
    description: Refresh ExternalSecret
    command: bash
    background: false
    args:
      - -c
      - "kubectl annotate externalsecrets.external-secrets.io --context $CONTEXT -n $NAMESPACE $NAME force-sync=$(date +%s) --overwrite"
  get-pvc:
    shortCut: Shift-L
    confirm: false
    scopes:
      - persistentvolumeclaims
    description: PVC-NODE
    command: bash
    background: false
    args:
      - -c
      - >-
        cat <(kubectl --context $CONTEXT get pvc -o=custom-columns=NAME:.metadata.name,STATUS:.status.phase,VOLUME-MODE:.spec.volumeMode,VOLUME-NAME:.spec.volumeName -n $NAMESPACE) <( kubectl --context $CONTEXT get volumeattachment | grep -e NAME $(kubectl --context $CONTEXT get pvc -n $NAMESPACE -o=custom-columns=NAME:.spec.volumeName --no-headers | sed 's/^/-e\ /' | tr '\n' ' '))
        | less -K
  explain:
    shortCut: Shift-1
    confirm: false
    scopes:
      - all
    description: EXPLAIN
    command: bash
    background: false
    args:
      - -c
      - kubectl --context $CONTEXT explain $(cat <(echo -n "$RESOURCE_NAME.") $VIM_YAML_TREE_FILE_PATH) | less -K
